#!/bin/sh -e

#
# Copyright (c) 2011 Simone Basso <bassosimone@gmail.com>,
#  NEXA Center for Internet & Society at Politecnico di Torino
#
# This file is part of Neubot <http://www.neubot.org/>.
#
# Neubot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Neubot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Neubot.  If not, see <http://www.gnu.org/licenses/>.
#

#
# Regression test for Debian/control/postinst
#

test -x /usr/bin/dpkg || exit 0

# Sanity checks
if dpkg -l | grep -q neubot; then
    echo "$0: you must uninstall Neubot to run this test" 1>&2
    exit 1
fi
if [ `id -u` -ne 0 ]; then
    echo "$0: you must be root to run this test" 1>&2
    exit 1
fi

# Run serveral tests at once
if [ $# -eq 0 ]; then
    echo '*** Test with no database'
    $0 - - -
    echo ''

    echo '*** Test with good database'
    $0 1 1 1
    echo ''

    echo '*** Test with bad database'
    $0 0 0 0
    $0 0 0 1
    $0 0 1 0
    $0 0 1 1
    $0 1 0 0
    $0 1 0 1
    $0 1 1 0
    echo ''

    echo '*** Done'
    exit 0
elif [ $# -ne 3 ]; then
    echo "Usage: $0: [informed can_collect can_publish]" 1>&2
    exit 1
fi

cleanup() {
    rm -rf /usr/share/neubot
    rm -rf /etc/init.d/neubot
    grep -q _neubot /etc/passwd && userdel _neubot
    grep -q _neubot /etc/group && groupdel _neubot
    update-rc.d -f neubot remove
    apt-key list | grep -q F68D1AAD && apt-key del F68D1AAD
    rm -rf /tmp/etc-init.d-neubot
    rm -rf /tmp/usr-bin-neubot
    rm -rf /var/lib/neubot
    rm -rf /var/lib/update-notifier/user.d/neubot
    rm -rf /usr/bin/neubot
}

# Cleanup
echo 'BEGIN: start from scratch'
cleanup
echo 'END: start from scratch (OK)'

# Setup database
if [ "$1" = "-" -a "$2" = "-" -a "$3" = "-" ]; then
    : # nothing
elif [ "$1" = "1" -a "$2" = "1" -a "$3" = "1" ]; then
    echo -n 'Create database with good privacy... '
    install -d /var/lib/neubot
    sqlite3 /var/lib/neubot/database.sqlite3 \
     'CREATE TABLE config(name TEXT PRIMARY KEY, value TEXT);'
    sqlite3 /var/lib/neubot/database.sqlite3 \
     'INSERT INTO config VALUES("privacy.informed", 1);'
    sqlite3 /var/lib/neubot/database.sqlite3 \
     'INSERT INTO config VALUES("privacy.can_collect", 1);'
    sqlite3 /var/lib/neubot/database.sqlite3 \
     'INSERT INTO config VALUES("privacy.can_publish", 1);'
    echo 'OK'
else
    echo -n 'Create database with bad privacy... '
    install -d /var/lib/neubot
    sqlite3 /var/lib/neubot/database.sqlite3 \
     'CREATE TABLE config(name TEXT PRIMARY KEY, value TEXT);'
    sqlite3 /var/lib/neubot/database.sqlite3 \
     "INSERT INTO config VALUES('privacy.informed', $1);"
    sqlite3 /var/lib/neubot/database.sqlite3 \
     "INSERT INTO config VALUES('privacy.can_collect', $2);"
    sqlite3 /var/lib/neubot/database.sqlite3 \
     "INSERT INTO config VALUES('privacy.can_publish', $3);"
    echo 'OK'
fi

echo -n 'Setup /usr/share/neubot /etc/init.d/neubot /usr/bin/neubot... '
install -d /usr/share/neubot
install -m644 /dev/null /usr/share/neubot/__init__.py
install /dev/null /etc/init.d/neubot
install /dev/null /usr/bin/neubot
cat << EOF > /etc/init.d/neubot
#!/bin/sh
### BEGIN INIT INFO
# Provides: neubot
# Required-Start: $syslog $remote_fs
# Required-Stop: $syslog $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Network neutrality bot (neubot)
### END INIT INFO
echo -n 1 > /tmp/etc-init.d-neubot
EOF
cat << EOF > /usr/bin/neubot
#!/bin/sh
echo -n 1 > /tmp/usr-bin-neubot
# Check whether privacy settings are OK
python $PWD/neubot/privacy.py -t
EOF
echo 'OK'

echo 'BEGIN: run Debian/control/postinst'
./Debian/control/postinst
echo 'END: run Debian/control/postinst (OK)'

if [ "$1" != "1" -o "$2" != "1" ]; then
    echo '*** Please close the notification window...'
    sleep 15
fi

echo -n 'Make sure that /usr/share/neubot was compiled... '
test -f /usr/share/neubot/__init__.pyc
echo 'OK'

echo -n 'Make sure that _neubot group was created... '
grep -q _neubot /etc/group
echo 'OK'

echo -n 'Make sure that _neubot user was created... '
grep -q _neubot /etc/passwd
echo 'OK'

echo -n 'Make sure that symlinks were created in /etc/rcN.d... '
for N in 0 1 6; do
    test -x /etc/rc$N.d/K99neubot
done
for N in 2 3 4 5; do
    test -x /etc/rc$N.d/S99neubot
done
echo 'OK'

echo -n 'Make sure that the key was installed... '
[ `apt-key list|grep 'F68D1AAD'|sort|uniq|wc -l` -eq 1 ]
echo 'OK'

echo 'BEGIN: Make sure that the script is idempotent'
./Debian/control/postinst
echo 'END: Make sure that the script is idempotent (OK)'

if [ "$1" = "-" -a "$2" = "-" -a "$3" = "-" ]; then
    : # nothing
elif [ "$1" = "1" -a "$2" = "1" -a "$3" = "1" ]; then
    echo -n 'Make sure NOT -f /var/lib/update-notifier/user.d/neubot... '
    test -f /var/lib/update-notifier/user.d/neubot && exit 1
    echo 'OK'
else
    echo -n 'Make sure -f /var/lib/update-notifier/user.d/neubot... '
    test -f /var/lib/update-notifier/user.d/neubot
    echo 'OK'
fi

echo -n 'Make sure that neubot is started... '
[ -f /tmp/etc-init.d-neubot ] && [ `cat /tmp/etc-init.d-neubot` -eq '1' ]
echo 'OK'

echo 'BEGIN: cleanup everything'
cleanup
echo 'END: cleanup everything (OK)'
